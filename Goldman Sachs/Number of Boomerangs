class Solution {
public:
    int dist(vector<int> p1,vector<int> p2){
        int x1 = p1[0];
        int y1 = p1[1];
        int x2 = p2[0];
        int y2 = p2[1];
        int d = (x2-x1)(x2-x1) + (y2-y1)(y2-y1);
        return d;
    }
    int numberOfBoomerangs(vector<vector<int>>& points) {
        int cnt=0;
        for(int i=0;i<points.size();i++){
            map<int,int> mp;
            for(int j=0;j<points.size();j++){
                if(i==j) continue;
                int d = dist(points[i],points[j]);
                // cout<<i<<" "<<j<<" : "<<d<<endl;
                if(mp.find(d)!=mp.end()){
                    // cout<<i<<" "<<j<<" : "<<d<<endl;
                    cnt+=2*mp[d];
                }
                mp[d]++;
            }
        }
        return cnt;
    }
};
